{"version":3,"sources":["component/beaconlist.js","view/beacon.js"],"names":["Component","observer","BeaconStore","useStore","useEffect","console","log","reset","initialLoad","pageStart","loadMore","find","hasMore","isLoading","useWindow","dataSource","list","renderItem","item","Item","_serverData","beaconID","beaconName","deviceID","tip","Wrapper","styled","div","Title","h1","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","setBeaconID","setBeaconName","addBeacon","then","message","success","catch","e","error","onFinishFailed","errorInfo","autoComplete","label","rules","required","offset","type","htmlType"],"mappings":"mOA6CeA,EArCGC,aAAS,WAAO,IACvBC,EAAeC,cAAfD,YAaP,OARAE,qBAAU,WAEN,OADAC,QAAQC,IAAI,4BACL,WACHD,QAAQC,IAAI,gBACZJ,EAAYK,WAEjB,IAGA,mCACP,8BACI,cAAC,IAAD,CAAgBC,aAAa,EAAMC,UAAW,EAAGC,SAfhC,WACbL,QAAQC,IAAI,oHACZJ,EAAYS,QAaqDC,SAAUV,EAAYW,WAAYX,EAAYU,QAASE,WAAW,EAAvI,SACI,cAAC,IAAD,CAAMC,WAAab,EAAYc,KAAMC,WAAa,SAAAC,GAAI,OAClD,cAAC,IAAKC,KAAN,UACI,gCACI,8DAAaD,EAAKE,YAAYC,SAA9B,YACA,gEAAeH,EAAKE,YAAYE,kBAHxBJ,EAAKE,YAAYG,WADrC,SASKrB,EAAYW,WAAYX,EAAYU,SACrC,qCAAO,cAAC,IAAD,CAAMY,IAAI,uBAAjB,mBC9BNC,EAAUC,IAAOC,IAAV,mKAOPC,EAAQF,IAAOG,GAAV,2EAmDI7B,UA9CG,WAAO,IACdE,EAAeC,cAAfD,YAoBP,OACI,qCACA,eAACuB,EAAD,WACG,cAACG,EAAD,uCAEA,eAAC,IAAD,CAAME,KAAK,QAAQC,SAAU,CAACC,KAAM,GAAKC,WAAY,CAACD,KAAM,IAAME,cAAe,CAACC,UAAU,GAAQC,SAxB1F,SAACC,GACdhC,QAAQC,IAAI,8CAAiB+B,GAC7BnC,EAAYoC,YAAYD,EAAOhB,UAC/BnB,EAAYqC,cAAcF,EAAOf,YACjCpB,EAAYsC,YACPC,MAAK,WACFC,IAAQC,QAAQ,+BACjBC,OAAM,SAACC,GACVxC,QAAQC,IAAIuC,GACZH,IAAQI,MAAM,gCAeyGC,eAVxG,SAACC,GACpB3C,QAAQC,IAAI,UAAW0C,IASoIC,aAAa,MAArK,UAEC,cAAC,IAAK9B,KAAN,CAAW+B,MAAM,iBAAOpB,KAAK,WAAWqB,MAAO,CAAE,CAAEC,UAAU,EAAMV,QAAS,oBAA5E,SACG,cAAC,IAAD,MAGH,cAAC,IAAKvB,KAAN,CAAW+B,MAAM,mBAASpB,KAAK,aAAaqB,MAAO,CAAE,CAAEC,UAAU,EAAMV,QAAS,sBAAhF,SACG,cAAC,IAAD,MAGH,cAAC,IAAKvB,KAAN,CAAWc,WAAY,CAACoB,OAAQ,GAAGrB,KAAM,IAAzC,SACG,cAAC,IAAD,CAAQsB,KAAK,UAAUC,SAAS,SAAhC,kCAIP,cAAC,EAAD","file":"static/js/11.48ecd77f.chunk.js","sourcesContent":["import {List, Spin} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStore} from \"../store\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\n\r\n\r\nconst Component = observer(() => {\r\n    const {BeaconStore} = useStore();\r\n    const loadMore = () => {\r\n        console.log('执行了devicelist的loadMore，但是不知道会不会执行find');\r\n        BeaconStore.find();\r\n    };\r\n    useEffect(() => {\r\n        console.log('进入组件')\r\n        return () => {\r\n            console.log('卸载')\r\n            BeaconStore.reset();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n       <>\r\n<div>\r\n    <InfiniteScroll initialLoad={true} pageStart={0} loadMore={loadMore} hasMore={!BeaconStore.isLoading &&BeaconStore.hasMore} useWindow={true}>\r\n        <List dataSource={ BeaconStore.list} renderItem={ item=>\r\n            <List.Item key={item._serverData.deviceID}>\r\n                <div>\r\n                    <span>信标ID为：{item._serverData.beaconID}，</span>\r\n                    <span>信标Name为：{item._serverData.beaconName}</span>\r\n                </div>\r\n            </List.Item>\r\n            }\r\n            >\r\n            {BeaconStore.isLoading &&BeaconStore.hasMore && (\r\n            <div>  <Spin tip=\"加载中\" />  </div>\r\n            )}\r\n        </List>\r\n    </InfiniteScroll>\r\n</div>\r\n       </>\r\n    );\r\n});\r\n\r\nexport default Component;\r\n\r\n","import {Form, Input, Button, message} from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useStore} from '../store';\r\nimport List from '../component/beaconlist'\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 2px 3px rgba(0, 0, 0, 0.3);\r\n  border-radius: 6px;\r\n  padding: 20px;\r\n`\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n`\r\n\r\nconst Component = () => {\r\n    const {BeaconStore} = useStore();\r\n    const onFinish = (values) => {\r\n        console.log('输入的values的值为:', values);\r\n        BeaconStore.setBeaconID(values.beaconID);\r\n        BeaconStore.setBeaconName(values.beaconName);\r\n        BeaconStore.addBeacon()\r\n            .then(() => {\r\n                message.success('添加成功')\r\n            }).catch((e) => {\r\n            console.log(e)\r\n            message.error('添加失败')\r\n        })\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <Wrapper>\r\n           <Title>添加信标</Title>\r\n\r\n           <Form name=\"basic\" labelCol={{span: 4,}} wrapperCol={{span: 20,}} initialValues={{remember: true,}} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\">\r\n\r\n            <Form.Item label=\"信标ID\" name=\"beaconID\" rules={[ { required: true, message: '信标ID!' , } ]}>\r\n               <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"信标name\" name=\"beaconName\" rules={[ { required: true, message: '信标Name!' , } ]}>\r\n               <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{offset: 10,span: 30,}}>\r\n               <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n            </Form.Item>\r\n           </Form>\r\n         </Wrapper>\r\n        <List/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Component;"],"sourceRoot":""}