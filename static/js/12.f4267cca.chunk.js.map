{"version":3,"sources":["component/devicelist.js","view/device.js"],"names":["Component","observer","DeviceStore","useStore","useEffect","console","log","reset","initialLoad","pageStart","loadMore","find","hasMore","isLoading","useWindow","dataSource","list","renderItem","item","Item","_serverData","deviceID","deviceIMEI","tip","Wrapper","styled","div","Title","h1","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","setDeviceID","setDeviceName","addDevice","then","message","success","catch","error","onFinishFailed","errorInfo","autoComplete","label","rules","required","offset","type","htmlType"],"mappings":"mOAoDeA,EA7CGC,aAAS,WAAO,IACvBC,EAAeC,cAAfD,YAaP,OARAE,qBAAU,WAEN,OADAC,QAAQC,IAAI,4BACL,WACHD,QAAQC,IAAI,gBACZJ,EAAYK,WAEjB,IAGA,mCACA,8BACP,cAAC,IAAD,CACIC,aAAa,EACbC,UAAW,EACXC,SAlBiB,WACbL,QAAQC,IAAI,oHACZJ,EAAYS,QAiBhBC,SAAUV,EAAYW,WAAaX,EAAYU,QAC/CE,WAAW,EALf,SAOI,cAAC,IAAD,CACIC,WAAYb,EAAYc,KACxBC,WACI,SAAAC,GAAI,OAAI,cAAC,IAAKC,KAAN,UAEJ,gCACI,gEAAeD,EAAKE,YAAYC,SAAhC,YACA,gEAAeH,EAAKE,YAAYE,kBAJhBJ,EAAKE,YAAYC,WAHjD,SAaOnB,EAAYW,WAAYX,EAAYU,SAAY,oCAAM,cAAC,IAAD,CAAMW,IAAI,uBAAhB,kBCtCrDC,EAAUC,IAAOC,IAAV,mKAOPC,EAAQF,IAAOG,GAAV,2EAqDI5B,UAhDG,WAAO,IACdE,EAAeC,cAAfD,YAsBP,OACI,qCACC,eAACsB,EAAD,WACE,cAACG,EAAD,uCAEA,eAAC,IAAD,CAAME,KAAK,QAAQC,SAAU,CAACC,KAAM,GAAKC,WAAY,CAACD,KAAM,IAAME,cAAe,CAACC,UAAU,GAAQC,SAxB1F,SAACC,GACd/B,QAAQC,IAAI,YAAa8B,GACzBlC,EAAYmC,YAAYD,EAAOf,UAC/BnB,EAAYoC,cAAcF,EAAOd,YACjCpB,EAAYqC,YACPC,MAAK,WACFC,IAAQC,QAAQ,2CACjBC,OAAM,WACLF,IAAQG,MAAM,4CAgBqGC,eAXxG,SAACC,GACpBzC,QAAQC,IAAI,UAAWwC,IAUoIC,aAAa,MAArK,UAEC,cAAC,IAAK5B,KAAN,CAAW6B,MAAM,mBAASnB,KAAK,WAAWoB,MAAO,CAAE,CAAEC,UAAU,EAAMT,QAAS,oBAA9E,SACG,cAAC,IAAD,MAGH,cAAC,IAAKtB,KAAN,CAAW6B,MAAM,mBAASnB,KAAK,aAAaoB,MAAO,CAAE,CAAEC,UAAU,EAAMT,QAAS,sBAAhF,SACG,cAAC,IAAD,MAGH,cAAC,IAAKtB,KAAN,CAAWa,WAAY,CAACmB,OAAQ,GAAGpB,KAAM,IAAzC,SACG,cAAC,IAAD,CAAQqB,KAAK,UAAUC,SAAS,SAAhC,kCAIN,cAAC,EAAD","file":"static/js/12.f4267cca.chunk.js","sourcesContent":["import {List, Spin} from \"antd\";\r\nimport React, {useEffect} from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStore} from \"../store\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\n\r\nconst Component = observer(() => {\r\n    const {DeviceStore} = useStore();\r\n    const loadMore = () => {\r\n        console.log('执行了devicelist的loadMore，但是不知道会不会执行find');\r\n        DeviceStore.find();\r\n    };\r\n    useEffect(() => {\r\n        console.log('进入组件')\r\n        return () => {\r\n            console.log('卸载')\r\n            DeviceStore.reset();\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n       <>\r\n       <div> \r\n<InfiniteScroll\r\n    initialLoad={true}\r\n    pageStart={0}\r\n    loadMore={loadMore}\r\n    hasMore={!DeviceStore.isLoading && DeviceStore.hasMore}\r\n    useWindow={true}\r\n>\r\n    <List\r\n        dataSource={DeviceStore.list}\r\n        renderItem={\r\n            item => <List.Item key={item._serverData.deviceID}>\r\n            \r\n                <div>\r\n                    <span>设备Name为：{item._serverData.deviceID}，</span>\r\n                    <span>设备IMEI为：{item._serverData.deviceIMEI}</span>\r\n                </div>\r\n\r\n            </List.Item>\r\n        }\r\n    >\r\n        {  DeviceStore.isLoading &&DeviceStore.hasMore && (<div> <Spin tip=\"加载中\"/> </div>)  }\r\n    </List>\r\n</InfiniteScroll>\r\n</div> \r\n       </>\r\n    );\r\n});\r\n\r\nexport default Component;\r\n\r\n","import {Form, Input, Button, message} from 'antd';\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useStore} from '../store';\r\nimport List from '../component/devicelist'\r\n\r\nconst Wrapper = styled.div`\r\n  max-width: 600px;\r\n  margin: 30px auto;\r\n  box-shadow: 2px 2px 2px 3px rgba(0, 0, 0, 0.3);\r\n  border-radius: 6px;\r\n  padding: 20px;\r\n`\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n  margin-bottom: 25px;\r\n`\r\n\r\nconst Component = () => {\r\n    const {DeviceStore} = useStore();\r\n    // , UserStore\r\n    // const history = useHistory();\r\n    const onFinish = (values) => {\r\n        console.log('Success2:', values);\r\n        DeviceStore.setDeviceID(values.deviceID);\r\n        DeviceStore.setDeviceName(values.deviceIMEI);\r\n        DeviceStore.addDevice()\r\n            .then(() => {\r\n                message.success('设备添加成功')\r\n            }).catch(() => {\r\n                message.error('设备添加失败')\r\n        })\r\n\r\n    };\r\n\r\n    const onFinishFailed = (errorInfo) => {\r\n        console.log('Failed:', errorInfo);\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n         <Wrapper>\r\n           <Title>添加设备</Title>\r\n\r\n           <Form name=\"basic\" labelCol={{span: 4,}} wrapperCol={{span: 20,}} initialValues={{remember: true,}} onFinish={onFinish} onFinishFailed={onFinishFailed} autoComplete=\"off\">\r\n\r\n            <Form.Item label=\"设备Name\" name=\"deviceID\" rules={[ { required: true, message: '设备ID!' , } ]}>\r\n               <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item label=\"设备IMEI\" name=\"deviceIMEI\" rules={[ { required: true, message: '设备IMEI!' , } ]}>\r\n               <Input />\r\n            </Form.Item>\r\n\r\n            <Form.Item wrapperCol={{offset: 10,span: 30,}}>\r\n               <Button type=\"primary\" htmlType=\"submit\">提交</Button>\r\n            </Form.Item>\r\n           </Form>\r\n         </Wrapper>\r\n         <List/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Component;\r\n\r\n"],"sourceRoot":""}