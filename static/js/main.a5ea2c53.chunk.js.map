{"version":3,"sources":["component/beauty.jpg","component/header.js","component/footer.js","component/loading.js","App.js","reportWebVitals.js","index.js","model/index.js","store/history.js","store/user.js","store/image.js","store/auth.js","store/device.js","store/beacon.js","store/index.js"],"names":["Header","styled","header","Div","h1","Logo","img","StyledLink","NavLink","StyledButton","Button","H3","h3","Component","observer","useStore","AuthStore","UserStore","history","useHistory","src","imgUrl","alt","to","exact","style","textDecoration","activeClassName","currentUser","values","username","type","onClick","resetUser","logOut","console","log","push","FooterStyled","footer","Footer","loading","Home","lazy","History","Map","About","Login","Register","Beacon","Device","MadeMap","DoneMap","App","fallback","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","AV","init","appId","appKey","serverURL","Auth","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","signUpUser","error","logIn","loginUser","current","Uploader","filename","file","item","Object","avFile","File","set","save","serverFile","mapUrl","beaconName","todo","createWithoutData","page","limit","query","Query","include","doesNotExist","skip","descending","equalTo","find","results","catch","exists","deviceID","deviceIMEI","beaconID","destroy","ShowDevice","str","arr","split","i","length","makeObservable","this","newList","list","concat","err","finally","window","location","reload","isLoading","append","hasMore","message","observable","action","newfileName","fileName","newFile","isUploading","success","pullUser","HistoryStore","reset","ImageStore","deviceName","context","createContext","DeviceStore","BeaconStore","stores","useContext"],"mappings":"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","file":"static/js/main.a5ea2c53.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/beauty.f7a105fa.jpg\";","import React, {useState, useEffect} from 'react';\nimport imgUrl from './beauty.jpg'\nimport styled from 'styled-components'\nimport {NavLink} from 'react-router-dom';\nimport {Button} from 'antd';\nimport {useStore} from '../store';\nimport {useHistory} from 'react-router-dom';\nimport {observer} from 'mobx-react';\n\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  background-color: #02101f;\n  font-size: 20px;\n`;\n\nconst Div = styled.h1`\n  display: inline-block;\n  color: white;\n  margin-left: 30px;\n  margin-right: 90px;\n`\nconst Logo = styled.img`\n  width: 100px;\n  height: auto;\n  display: inline-block;\n`\nconst StyledLink = styled(NavLink)`\n  color: #fff;\n  margin-left: 60px;\n\n  &.active {\n    border-bottom: 1px solid white;\n  }\n`\nconst StyledButton = styled(Button)`\n  margin-left: 40px;\n`\n\nconst H3 = styled.h3`\n  color: #fff;\n  margin-top: 12px;\n  margin-left: 40px;\n`\n\n\nconst Component = observer(() => {\n    const {AuthStore, UserStore} = useStore();\n    const history = useHistory();\n\n    const handleLogOut = () => {\n        UserStore.resetUser()\n        AuthStore.logOut()\n        console.log('注销，清除当前用户信息')\n    };\n    const handleLogin = () => {\n        history.push('/login')\n        console.log('跳转到登录页面')\n    };\n    const handleRegister = () => {\n        history.push('/register')\n        console.log('跳转到注册页面')\n    };\n    return (\n        <Header>\n            <Div>BLE室内定位系统的研制</Div>\n            <Logo src={imgUrl} alt='beauty'/>\n            <nav>\n                <StyledLink to=\"/\" exact style={{textDecoration: 'none'}} activeClassName=\"active\"> 上传地图</StyledLink>\n                <StyledLink to=\"/history\" style={{textDecoration: 'none'}} activeClassName=\"active\">未绘制的地图</StyledLink>\n                <StyledLink to=\"/madeMap\" style={{textDecoration: 'none'}} activeClassName=\"active\">绘制地图</StyledLink>\n                <StyledLink to=\"/doneMap\" style={{textDecoration: 'none'}} activeClassName=\"active\">绘制好的地图</StyledLink>\n                {/* <StyledLink to=\"/map\" exact style={{textDecoration: 'none'}} activeClassName=\"active\">实时定位</StyledLink> */}\n                <StyledLink to=\"/beacon\" style={{textDecoration: 'none'}} activeClassName=\"active\">信标管理</StyledLink>\n                <StyledLink to=\"/device\" style={{textDecoration: 'none'}} activeClassName=\"active\">设备管理</StyledLink>\n                <StyledLink to=\"/about\" style={{textDecoration: 'none'}} activeClassName=\"active\">关于本系统</StyledLink>\n            </nav>\n            <>{\n                UserStore.currentUser ?\n                    <>\n                        <H3>{AuthStore.values.username}</H3>\n                        <StyledButton type=\"primary\" onClick={handleLogOut}> 注销 </StyledButton>\n                    </> : <>\n                        <StyledButton type=\"primary\" onClick={handleLogin}> 登录</StyledButton>\n                        <StyledButton type=\"primary\" onClick={handleRegister}> 注册 </StyledButton>\n                    </>\n            }\n            </>\n        </Header>\n    )\n});\n\nexport default Component;\n\n// 这里出现第一个bug，","import React from 'react';\nimport styled from 'styled-components'\n\nconst FooterStyled = styled.footer`\n  padding: 10px 100px;\n  text-align: center;\n  font-size: 12px;\n  color: #aaa;\n`;\n\n\nfunction Footer() {\n    return (\n        <FooterStyled>\n            <h1>基于BLE的室内定位系统</h1>\n            <p>\n                该系统的分为三层集架构，分别由python、leadcloud、JavaScript组成，实现了自定义室内地图以及将数据库中的定位信息转化为室内地图中的位置信息，并显示出来\n            </p>\n        </FooterStyled>\n    )\n}\n\nexport default Footer;","/* eslint-disable import/no-anonymous-default-export */\nimport React from \"react\";\n\n\nfunction loading() {\n    return (\n        <div> Loading... </div>\n    );\n}\n\nexport default loading;","import './App.css';\nimport React, {Suspense, lazy} from 'react';\nimport Header from './component/header';\nimport Footer from './component/footer';\nimport Loading from './/component/loading';\nimport 'antd/dist/antd.css'\nimport {\n    Switch,\n    Route,\n} from 'react-router-dom';\n\nconst Home = lazy(() => import('./view/home'));\nconst History = lazy(() => import('./view/history'));\nconst Map = lazy(() => import('./view/map'));\nconst About = lazy(() => import('./view/about'));\nconst Login = lazy(() => import('./view/login.js'));\nconst Register = lazy(() => import('./view/register.js'))\nconst Beacon = lazy(() => import('./view/beacon'));\nconst Device = lazy(() => import('./view/device'));\nconst MadeMap= lazy(() => import('./view/madeMap'));\nconst DoneMap= lazy(() => import('./view/doneMap'));\n\nfunction App() {\n    return (\n        <>\n            <Header/>\n            <main>\n                <Suspense fallback={<Loading/>}>\n                    <Switch>\n                        <Route path=\"/\" exact component={Home}/>     {/*这里是上传地图 */}\n                        <Route path='/history' component={History}/> {/*这里是未绘制的地图 */}\n                        <Route path=\"/madeMap\" exact component={MadeMap}/> {/*这里是绘制地图 */}\n                        <Route path=\"/doneMap\" exact component={DoneMap}/> {/*这里是绘制好的地图 */}\n                        <Route path=\"/map\" component={Map}/>              {/*这里是实时定位 */}\n                        <Route path=\"/beacon\" exact component={Beacon}/>    {/*这里是实时信标管理 */}\n                        <Route path=\"/device\" exact component={Device}/>     {/*这里是实时设备管理 */}\n                        <Route path=\"/about\" component={About}/>             {/*这里是实时关于 */}\n                        <Route path=\"/register\" component={Register}/>     {/*这里是不显示的注册 */}\n                        <Route path=\"/login\" component={Login}/>            {/*这里是不显示的登录 */}\n                    </Switch>\n                </Suspense>\n            </main>\n            <Footer/>\n        </>\n    );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n    HashRouter as Router\n} from 'react-router-dom'\n// import Model from './model/index'\n\n\nReactDOM.render(\n    <Router>\n        <App/>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import AV, {Query, User} from 'leancloud-storage'\n\nAV.init({ //安装规范对AV初始化\n    appId: \"34eLG26lSun8CGKdE28ayYJY-gzGzoHsz\",\n    appKey: \"5y1j3cbdC3DUo6joCdq6iKkU\",\n    serverURL: \"https://34elg26l.lc-cn-n1-shared.com\",\n})\n\n//封装一个Auth对象，待会再导出去，让其他页面也能使用，Auth对象\n\n//这个对象是负责登录注册的\nconst Auth = { //Auth是个对象，封装了几个工具方法\n    //register现在有问题，_a 不识别，报错\n    register(username, password) {  //register是一个工具方法，用来管理注册的一系列行为\n        var user = new AV.User(); //User是AV里封装好的类，哪里直接用\n        user.setUsername(username); //user对象是刚构造好的对象，里面有包自带的工具方法，通过这些工具方法可以实现后端的功能\n        user.setPassword(password);\n        return new Promise((resolve, reject) => {\n            user.signUp().then(signUpUser => resolve(signUpUser), error => reject(error))\n        })\n    },\n    login(username, password) { // login函数现在暂时是能行\n        return new Promise((resolve, reject) => {\n            User.logIn(username, password).then(loginUser => resolve(loginUser), error => reject(error))\n        })\n    },\n    logOut() {\n        User.logOut();//忘记大小写是Out\n    },\n    getCurrentUser() {\n        return User.current();\n    },\n}\n\n//这个对象负责地图上传和查找的，同时也负责绘制地图\n//给地图添加信标，去信标哪个数据库区找信标，然后显示一个地图有哪些信标，最后显示信标旁边的设备（这个要去信标的数据库去拿数据）\nconst Uploader = {\n    \n    add(filename, file) {\n        const item = new AV.Object('image')\n        var avFile = new AV.File(filename, file);\n        item.set('title', filename);\n        item.set('owner', AV.User.current());\n        item.set('url', avFile);\n        return new Promise((resolve, reject) => {\n            item.save().then((serverFile => resolve(serverFile)), error => reject(error))\n        })\n    },addBeacon(mapUrl,beaconName){\n        console.log(mapUrl)\n        const todo = AV.Object.createWithoutData('image', mapUrl);\n        todo.set('beacon', beaconName);\n        todo.save();\n    },\n    find({page = 0, limit = 10}) {\n        console.log('执行了model的find')\n        const query = new AV.Query('image');\n        query.include('owner');\n        query.doesNotExist('beacon');\n        query.limit(limit);   // 用来设置返回结果的数量\n        query.skip(page * limit); // 用来设置跳过的数据，skip和limit结合实现翻页功能\n        query.descending('createdAt');  //查询结果的排序\n        query.equalTo('owner', AV.User.current());  //查询的条件\n        return new Promise((resolve, reject) => {\n            query.find()\n                .then(results => {\n                    console.log('执行了query的find');\n                    resolve(results)\n                })\n                .catch(error => {\n                    console.log('query的find失败');\n                    reject(error)\n                })\n        });\n    },findBeacon({page = 0, limit = 10}){\n        console.log('执行了model种的find信标')\n        const query = new AV.Query('image');\n        query.include('owner');\n        query.exists('beacon');\n        query.limit(limit);   // 用来设置返回结果的数量\n        query.skip(page * limit); // 用来设置跳过的数据，skip和limit结合实现翻页功能\n        query.descending('createdAt');  //查询结果的排序\n        query.equalTo('owner', AV.User.current());  //查询的条件\n        return new Promise((resolve, reject) => {\n            query.find()\n                .then(results => {\n                    console.log('执行了query的find');\n                    resolve(results)\n                })\n                .catch(error => {\n                    console.log('query的find失败');\n                    reject(error)\n                })\n        });\n    }\n}\n\n//这个对象是负责设备上传的查找的\nconst Device = {\n    add(deviceID, deviceIMEI) {\n        const item = new AV.Object('Device')\n        item.set('deviceID', deviceID);\n        item.set('deviceIMEI', deviceIMEI);\n        item.set('owner', AV.User.current());\n        return new Promise((resolve, reject) => {\n            item.save().then(results => resolve(results), error => reject(error))\n        })\n    },\n    find({page = 0, limit = 10}) {\n        console.log('执行了model的find')\n        const query = new AV.Query('Device');\n        query.limit(limit);\n        query.skip(page * limit);\n        query.descending('createdAt');\n        return new Promise((resolve, reject) => {\n            query.find()\n                .then(results => {\n                    console.log('执行了query的find');\n                    resolve(results)\n                })\n                .catch(error => {\n                    console.log('query的find失败');\n                    reject(error)\n                })\n        });\n    }\n}\n\n//这个对象是负责信标上传和查找的\nconst Beacon = {\n    add(beaconID, beaconName) {\n        const item = new AV.Object('Beacon')\n        item.set('beaconID', beaconID);\n        item.set('beaconName', beaconName);\n        item.set('owner', AV.User.current());\n        return new Promise((resolve, reject) => {\n            item.save().then((serverFile => resolve(serverFile)), error => reject(error))\n        })\n    },\n    find({page = 0, limit = 10}) {\n        const todo = AV.Object.createWithoutData('image', '626ff4dee12bbd613358b459');\n        todo.destroy();\n        console.log('执行了model的find')\n        const query = new AV.Query('Beacon');\n        query.limit(limit);\n        query.skip(page * limit);\n        query.descending('createdAt');\n        return new Promise((resolve, reject) => {\n            query.find()\n                .then(results => {\n                    console.log('执行了query的find');\n                    resolve(results)\n                })\n                .catch(error => {\n                    console.log('query的find失败');\n                    reject(error)\n                })\n        });\n    }\n}\n\nconst Map = {\n    add(beaconID, beaconName) {\n        const item = new AV.Object('Map')\n        item.set('beaconID', beaconID);\n        item.set('beaconName', beaconName);\n        item.set('owner', AV.User.current());\n        return new Promise((resolve, reject) => {\n            item.save().then((serverFile => resolve(serverFile)), error => reject(error))\n        })\n    },\n    find({page = 0, limit = 10}) {\n        console.log('执行了model的find')\n        const query = new AV.Query('Beacon');\n        query.limit(limit);\n        query.skip(page * limit);\n        query.descending('createdAt');\n        return new Promise((resolve, reject) => {\n            query.find()\n                .then(results => {\n                    console.log('执行了query的find');\n                    resolve(results)\n                })\n                .catch(error => {\n                    console.log('query的find失败');\n                    reject(error)\n                })\n        });\n    }\n}\n\nconst ShowDevice={ //用于找到地图上有的信标旁边的设备\n    find({page = 0, limit = 10},str) {\n        // var text = \"1,2,3,4,5\";var array = text.split(\",\");//逗号是分隔符\n        // 这样就转化成数组了\n        console.log(str)  //str是信标字符串，要进行解析，解析成一个数组，然后查找\n        let arr=str.split(\",\")\n        for(let i=0;i<arr.length;i++){ \n           console.log(arr[i])\n        }\n        console.log('执行了model的find')\n        const query = new AV.Query('image');\n        query.include('owner');\n        query.doesNotExist('beacon');\n        query.limit(limit);   // 用来设置返回结果的数量\n        query.skip(page * limit); // 用来设置跳过的数据，skip和limit结合实现翻页功能\n        query.descending('createdAt');  //查询结果的排序\n        query.equalTo('owner', AV.User.current());  //查询的条件\n        return new Promise((resolve, reject) => {\n            query.find()\n                .then(results => {\n                    console.log('执行了query的find');\n                    resolve(results)\n                })\n                .catch(error => {\n                    console.log('query的find失败');\n                    reject(error)\n                })\n        });\n    }\n}\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport {Auth, Uploader,Device,Beacon,Map,ShowDevice}; //把Auth对象导出去\n\n\n\n\n","import {observable, action, makeObservable} from 'mobx';\nimport {Uploader,ShowDevice} from '../model';\nimport {message} from 'antd';\n\n\nclass HistoryStore {\n    constructor() {\n        makeObservable(this)\n    };\n\n    @observable list = [];\n    @observable isLoading = false;\n    @observable hasMore = true;\n    @observable page = 0;\n    @observable values = {\n        mapUrl: '',\n        beaconName: '',\n    };\n    limit = 10;\n\n    @action append(newList) { // 再旧的用户的列表上，添加新的列表，就像新上传了图片，列表就要多添加一条记录了\n        this.list = this.list.concat(newList);\n        console.log(newList)\n    }\n    @action setMapUrl(mapUrl){\n        this.values.mapUrl  = mapUrl\n        console.log('成功执行了setMapUrl')\n    }\n\n    @action setBeaconName( beaconName){\n        this.values.beaconName = beaconName\n        console.log('成功执行了setBeaconName')\n    }\n\n    @action addBeacon(){  // 这个MVC中的 store 是去添加beacon属性\n        return new Promise((resolve, reject) => {  \n            Uploader.addBeacon( this.values.mapUrl, this.values.beaconName) \n                .then(user => {\n                    console.log('数据传输给了model层，但是我觉得成功一半了，所以在store这里打个log')\n                    console.log(user)\n                    resolve(user)\n                })\n                .catch(err => {\n                    console.log('数据传输给了model层，还是失败了，所以在store这里打个log')\n                    reject(err)\n                })\n                .finally(()=>{\n                    window.location.reload()\n                })\n        })\n    }\n\n    @action find() {  // 这个MVC中的 store 是去找不含beacon属性的图片\n        console.log('store find image')\n        this.isLoading = true;\n        Uploader.find({page: this.page, limit: this.limit})\n            .then(newList => {\n                console.log('执行了第Uploader的find')\n                this.append(newList);\n                console.log('打印newlist' + newList)\n                this.page++;\n                if (newList.length < this.limit) {\n                    this.hasMore = false;\n                }\n                console.log('Uploader.find执行完成')\n            }).catch(error => {\n            message.error('加载数据失败',error);\n        }).finally(() => {\n            this.isLoading = false;\n        });\n    }\n    @action findDeviceInMap() {  \n        console.log('store find image')\n        this.isLoading = true;\n        ShowDevice.find({page: this.page, limit: this.limit})\n            .then(newList => {\n                console.log('执行了第Uploader的find')\n                this.append(newList);\n                console.log('打印newlist' + newList)\n                this.page++;\n                if (newList.length < this.limit) {\n                    this.hasMore = false;\n                }\n                console.log('Uploader.find执行完成')\n            }).catch(error => {\n            message.error('加载数据失败',error);\n        }).finally(() => {\n            this.isLoading = false;\n        });\n    }\n\n\n    @action findBeacon() { // 这个MVC中的 store 是去找含beacon属性的图片\n        console.log('store find image')\n        this.isLoading = true;\n        Uploader.findBeacon({page: this.page, limit: this.limit})\n            .then(newList => {\n                console.log('执行了第Uploader的find')\n                this.append(newList);\n                console.log('打印newlist' + newList)\n                this.page++;\n                if (newList.length < this.limit) {\n                    this.hasMore = false;\n                }\n                console.log('Uploader.find执行完成')\n            }).catch(error => {\n            message.error('加载数据失败',error);\n        }).finally(() => {\n            this.isLoading = false;\n        });\n    }\n\n\n    @action reset() { //用户注销\n        this.list = [];\n        this.isLoading = false;\n        this.hasMore = true;\n        this.page = 0;\n    }\n\n}\n\n\nexport default new HistoryStore();\n","import {message} from 'antd';\nimport {observable, action, makeObservable} from 'mobx'\nimport {Auth} from '../model'\n\n// 这个AuthStore存储的是，用户临时的登录信息，以及部分的操作逻辑，我觉得属于VM层的内容\nclass UserStore {  // AuthStore是一个对象，Auth也是一个对象，两个对象都有自己的属性和方法，而AuthStore的工具方法，是来自Auth对象的工具方法，并且对其进行了修饰\n    constructor() {\n        makeObservable(this)\n    };\n\n    @observable currentUser = null;\n\n    @action pullUser() {\n        this.currentUser = Auth.getCurrentUser()\n    }\n\n    @action resetUser() {\n        this.currentUser = null;\n    }\n\n}\n\nexport default new UserStore();\n\n\n\n\n","import {message} from 'antd';\nimport {observable, action, makeObservable} from 'mobx'\nimport {Uploader} from '../model'\n\n// 这个ImageStore存储的是，用户上传的图片信息，以及部分的操作逻辑，我觉得属于VM层的内容\nclass ImageStore {  // ImageStore是一个对象，UpLoader也是一个对象，两个对象都有自己的属性和方法，而UpLoader的工具方法，是来自Auth对象的工具方法，并且对其进行了修饰\n    constructor() {\n        makeObservable(this)\n    };\n\n    @observable fileName = '';\n\n    @observable file = null;\n\n    @observable isUploading = false;\n\n    @observable serverFile = null;\n\n    @action setFileName(newfileName) {\n        this.fileName = newfileName;\n    };\n\n    @action setFile(newFile) {\n        this.file = newFile;\n    };\n\n    @action upLoad() {\n        this.isUploading = true;\n        this.serverFile = null;\n        return new Promise((resolve, reject) => {\n            Uploader.add(this.fileName, this.file)\n                .then(serverFile => {\n                    this.serverFile = serverFile\n                    message.success('上传成功')\n                    resolve(serverFile)\n                })\n                .catch(error => {\n                    message.error('上传失败')\n                    reject(error)\n                })\n        })\n    }\n\n    @action reset() {\n        this.isUploading = false;\n        this.serverFile = null;\n    }\n\n}\n\nexport default new ImageStore();","import {message} from 'antd';\nimport {observable, action, makeObservable} from 'mobx'\nimport HistoryStore from './history'\nimport {Auth} from '../model'\nimport UserStore from './user'\nimport ImageStore from './image'\n\n// 这个AuthStore存储的是，用户临时的登录信息，以及部分的操作逻辑，我觉得属于VM层的内容\nclass AuthStore {  // AuthStore是一个对象，Auth也是一个对象，两个对象都有自己的属性和方法，而AuthStore的工具方法，是来自Auth对象的工具方法，并且对其进行了修饰\n    constructor() {\n        makeObservable(this)\n    };\n\n    @observable values = {\n        username: '',\n        password: '',\n    };\n\n    @action setUsername(username) {\n        this.values.username = username;\n    };\n\n    @action setPassword(password) {\n        this.values.password = password;\n    };\n\n    @action login() { //登录逻辑\n        return new Promise((resolve, reject) => {  // promise是一个ES6自带的构造函数，会生成一个Promise对象，传进去的参数是一个箭头函数。定义如果事件成功执行什么，事件失败执行什么\n            Auth.login(this.values.username, this.values.password) //成功之后可以做一些事情，那就是用then和catch，如果事件成功就执行then代码，如果事件失败就执行catch代码\n                .then(user => {\n                    UserStore.pullUser();\n                    resolve(user)\n                })\n                .catch(err => {\n                    UserStore.resetUser();\n                    reject(err)\n                });\n        })\n    };\n\n    @action register() { //注册逻辑\n        return new Promise((resolve, reject) => {\n            Auth.register(this.values.username, this.values.password)\n                .then(user => {\n                    message.success('注册成功，正准备跳转到登录页面')\n                    UserStore.pullUser();\n                    resolve(user);\n                })\n                .catch(err => {\n                    message.success('注册失败，请您稍后再试')\n                    UserStore.resetUser();\n                    reject(err);\n                })\n        })\n    };\n\n    @action logOut() {\n        console.log('注销');\n        HistoryStore.reset();\n        UserStore.resetUser();\n        ImageStore.reset();\n        this.values.password = '';\n        this.values.username = '';\n        Auth.logOut();\n    }\n}\n\nexport default new AuthStore();\n\n\n\n\n","import {observable, action, makeObservable} from 'mobx';\r\nimport {Device} from '../model';\r\nimport {message} from 'antd';\r\n\r\nclass  DeviceStore {\r\n    constructor() {\r\n        makeObservable(this)\r\n    };\r\n\r\n    @observable list = [];\r\n    @observable isLoading = false;\r\n    @observable hasMore = true;\r\n    @observable page = 0;\r\n    @observable values = {\r\n        deviceID: '',\r\n        deviceName: '',\r\n    };\r\n    limit = 10;\r\n\r\n    @action append(newList) { \r\n        this.list = this.list.concat(newList);\r\n        console.log(newList)\r\n    }\r\n\r\n    @action setDeviceID(deviceID){\r\n        this.values.deviceID  =deviceID\r\n        console.log('成功执行了setDeviceID')\r\n    }\r\n\r\n    @action setDeviceName(deviceName){\r\n        this.values.deviceName=deviceName\r\n        console.log('成功执行了setDeviceName')\r\n    }\r\n    \r\n    @action addDevice(){\r\n        return new Promise((resolve, reject) => {  \r\n            Device.add( this.values.deviceID, this.values.deviceName) \r\n                .then(user => {\r\n                    resolve(user)\r\n                })\r\n                .catch(err => {\r\n                    reject(err)\r\n                }).finally(() => {\r\n                    window.location.reload()\r\n                });\r\n        })\r\n    }\r\n\r\n    @action find() {\r\n        this.isLoading = true;\r\n        Device.find({page: this.page, limit: this.limit})\r\n            .then(newList => {\r\n                console.log('执行了第device的find')\r\n                this.append(newList);\r\n                this.page++;\r\n                if (newList.length < this.limit) {\r\n                    this.hasMore = false;\r\n                }\r\n                console.log('device.find执行完成')\r\n            }).catch(error => {\r\n            message.error('加载数据失败',error);\r\n        }).finally(() => {\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n\r\n    @action reset() { \r\n        this.list = [];\r\n        this.isLoading = false;\r\n        this.hasMore = true;\r\n        this.page = 0;\r\n    }\r\n\r\n}\r\n\r\nexport default new DeviceStore();","import {observable, action, makeObservable} from 'mobx';\r\nimport {Beacon} from '../model';\r\nimport {message} from 'antd';\r\n\r\n\r\nclass BeaconStore {\r\n    constructor() {\r\n        makeObservable(this)\r\n    };\r\n\r\n    @observable list = [];\r\n    @observable isLoading = false;\r\n    @observable hasMore = true;\r\n    @observable page = 0;\r\n    @observable values = {\r\n        beaconID: '',\r\n        beaconName: '',\r\n    };\r\n    limit = 10;\r\n\r\n    @action append(newList) { // 再旧的用户的列表上，添加新的列表，就像新上传了图片，列表就要多添加一条记录了\r\n        this.list = this.list.concat(newList);\r\n        console.log(newList)\r\n    }\r\n\r\n    @action setBeaconID( beaconID){\r\n        this.values.beaconID=beaconID\r\n    }\r\n    @action setBeaconName( beaconName){\r\n        this.values.beaconName=beaconName\r\n    }\r\n    @action addBeacon(){\r\n        return new Promise((resolve, reject) => {  \r\n            Beacon.add(this.values.beaconID,  this.values.beaconName) \r\n                .then(user => {\r\n                    resolve(user)\r\n                })\r\n                .catch(err => {\r\n                    reject(err)\r\n                }).finally(() => {\r\n                    window.location.reload()\r\n                });\r\n        })\r\n    }\r\n\r\n    @action find() {\r\n        this.isLoading = true;\r\n        Beacon.find({page: this.page, limit: this.limit})\r\n            .then(newList => {\r\n                console.log('执行了beacon的find')\r\n                this.append(newList);\r\n                this.page++;\r\n                if (newList.length < this.limit) {\r\n                    this.hasMore = false;\r\n                }\r\n                console.log('beacon.find执行完成')\r\n            }).catch(error => {\r\n            message.error('加载数据失败',error);\r\n        }).finally(() => {\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n\r\n    @action reset() { //用户注销\r\n        this.list = [];\r\n        this.isLoading = false;\r\n        this.hasMore = true;\r\n        this.page = 0;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default new BeaconStore();","import React, {createContext, useContext} from 'react';\n// import {AuthStore} from './auth'; 以前的AuthStore是类\nimport AuthStore from './auth';\nimport UserStore from './user';\nimport ImageStore from './image'\nimport HistoryStore from './history'\nimport DeviceStore from './device'\nimport BeaconStore from './beacon'\n\nconst context = createContext({\n    HistoryStore,\n    AuthStore,\n    UserStore,\n    ImageStore,\n    DeviceStore,\n    BeaconStore,\n}); //context是createContext函数的返回值，该函数的传参是个对象  \n\nwindow.stores = {\n    AuthStore,\n    UserStore,\n    ImageStore,\n    HistoryStore,\n    DeviceStore,\n    BeaconStore,\n    // ImageStore,\n    // HistoryStore\n};\n\n//这里好奇怪，有点像是，用对象封装了一个对象，用函数导出了一个函数\n\nexport const useStore = () => useContext(context) //导出了一个函数，该函数的内容是执行另一个函数 userStore\n\n//每个功能组的核心都是index，index相当于每个功能的引用中心，内部通常不含解决需求的代码，但作用是引入其他解决需求的代码\n\n//auth.js创建的是类，而不是对象，在index里面才创建为对象的。对象是类的实例，相当于对象的设计图，如果创建了类，想使用对象里的方法，必须先得构建出类的实例，即对象"],"sourceRoot":""}